** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (spdep)

The downloaded source packages are in
        ‘/tmp/Rtmpo8Q240/downloaded_packages’
Installing package into ‘/usr/local/lib/R/site-library’
(as ‘lib’ is unspecified)
trying URL 'https://cloud.r-project.org/src/contrib/kableExtra_1.3.4.tar.gz'
Content type 'application/x-gzip' length 1646490 bytes (1.6 MB)
==================================================
downloaded 1.6 MB

* installing *source* package ‘kableExtra’ ...
** package ‘kableExtra’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (kableExtra)

The downloaded source packages are in
        ‘/tmp/Rtmpo8Q240/downloaded_packages’
[1] "install_r_deps.R"            "spNetwork_0.4.1.9000.tar.gz"
[3] "testing.R"
── R CMD check ─────────────────────────────────────────────────────────────────
─  using log directory ‘/tmp/Rtmpo8Q240/file85da1d8f1/spNetwork.Rcheck’
─  using R version 4.1.2 (2021-11-01)
─  using platform: x86_64-pc-linux-gnu (64-bit)
─  using session charset: UTF-8
✔  checking for file ‘spNetwork/DESCRIPTION’ (570ms)
─  checking extension type ... Package
─  this is package ‘spNetwork’ version ‘0.4.1.9000’
─  package encoding: UTF-8
✔  checking package namespace information
✔  checking package dependencies (840ms)
✔  checking if this is a source package ...
✔  checking if there is a namespace
✔  checking for executable files (557ms)
✔  checking for hidden files and directories ...
✔  checking for portable file names ...
✔  checking for sufficient/correct file permissions
E  checking whether package ‘spNetwork’ can be installed (34.7s)
   Installation failed.
   See ‘/tmp/Rtmpo8Q240/file85da1d8f1/spNetwork.Rcheck/00install.out’ for details.

   See
     ‘/tmp/Rtmpo8Q240/file85da1d8f1/spNetwork.Rcheck/00check.log’
   for details.


── R CMD check results ─────────────────────────────── spNetwork 0.4.1.9000 ────
Duration: 37.4s

❯ checking whether package ‘spNetwork’ can be installed ... ERROR
  See below...

── Install failure ─────────────────────────────────────────────────────────────

* installing *source* package ‘spNetwork’ ...
** using staged installation
** libs
g++ -std=gnu++14 -I"/usr/share/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/RcppProgress/include' -I'/usr/local/lib/R/site-library/RcppArmadillo/include' -I'/usr/local/lib/R/site-library/BH/include'    -fpic  -g -O2 -ffile-prefix-map=/build/r-base-4A2Reg/r-base-4.1.2=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++14 -I"/usr/share/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/RcppProgress/include' -I'/usr/local/lib/R/site-library/RcppArmadillo/include' -I'/usr/local/lib/R/site-library/BH/include'    -fpic  -g -O2 -ffile-prefix-map=/build/r-base-4A2Reg/r-base-4.1.2=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c base_kernel_funtions.cpp -o base_kernel_funtions.o
g++ -std=gnu++14 -I"/usr/share/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/RcppProgress/include' -I'/usr/local/lib/R/site-library/RcppArmadillo/include' -I'/usr/local/lib/R/site-library/BH/include'    -fpic  -g -O2 -ffile-prefix-map=/build/r-base-4A2Reg/r-base-4.1.2=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c border_correction.cpp -o border_correction.o
g++ -std=gnu++14 -I"/usr/share/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/RcppProgress/include' -I'/usr/local/lib/R/site-library/RcppArmadillo/include' -I'/usr/local/lib/R/site-library/BH/include'    -fpic  -g -O2 -ffile-prefix-map=/build/r-base-4A2Reg/r-base-4.1.2=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c bw_selection_nkde.cpp -o bw_selection_nkde.o
g++ -std=gnu++14 -I"/usr/share/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/RcppProgress/include' -I'/usr/local/lib/R/site-library/RcppArmadillo/include' -I'/usr/local/lib/R/site-library/BH/include'    -fpic  -g -O2 -ffile-prefix-map=/build/r-base-4A2Reg/r-base-4.1.2=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c bw_selection_tnkde.cpp -o bw_selection_tnkde.o
g++ -std=gnu++14 -I"/usr/share/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/RcppProgress/include' -I'/usr/local/lib/R/site-library/RcppArmadillo/include' -I'/usr/local/lib/R/site-library/BH/include'    -fpic  -g -O2 -ffile-prefix-map=/build/r-base-4A2Reg/r-base-4.1.2=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c geometrical_functions.cpp -o geometrical_functions.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/bind/mem_fn.hpp:25,
                 from /usr/local/lib/R/site-library/BH/include/boost/mem_fn.hpp:22,
                 from /usr/local/lib/R/site-library/BH/include/boost/function/detail/prologue.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/function.hpp:30,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/detail/find_iterator.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:24,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:27,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/io/wkt/read.hpp:30,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/io/wkt/wkt.hpp:17,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/strategies/cartesian/buffer_end_round.hpp:27,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/strategies/strategies.hpp:45,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/geometry.hpp:60,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry.hpp:17,
                 from geometrical_functions.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/get_pointer.hpp:48:40: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   48 | template<class T> T * get_pointer(std::auto_ptr<T> const& p)
      |                                        ^~~~~~~~
In file included from /usr/include/c++/12/memory:76,
                 from /usr/local/lib/R/site-library/BH/include/boost/function/function_base.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/function/detail/prologue.hpp:17:
/usr/include/c++/12/bits/unique_ptr.h:56:28: note: declared here
   56 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/geometry/strategies/geographic/distance.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/strategies/strategies.hpp:90:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xy.hpp: In member function ‘void boost::geometry::model::d2::point_xy<CoordinateType, CoordinateSystem>::x(const CoordinateType&)’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xy.hpp:69:27: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Key, class _Compare, class _Alloc> class std::set’
   69 |     { this->template set<0>(v); }
      |                           ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xy.hpp:69:27: note:   expected a type, got ‘0’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xy.hpp:69:27: error: template argument 2 is invalid
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xy.hpp:69:27: error: template argument 3 is invalid
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xy.hpp: In member function ‘void boost::geometry::model::d2::point_xy<CoordinateType, CoordinateSystem>::y(const CoordinateType&)’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xy.hpp:73:27: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Key, class _Compare, class _Alloc> class std::set’
   73 |     { this->template set<1>(v); }
      |                           ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xy.hpp:73:27: note:   expected a type, got ‘1’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xy.hpp:73:27: error: template argument 2 is invalid
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xy.hpp:73:27: error: template argument 3 is invalid
In file included from /usr/local/lib/R/site-library/BH/include/boost/scoped_ptr.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/query_iterators.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:90,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/within/multi_point.hpp:34,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/within/implementation.hpp:30,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/covered_by/implementation.hpp:25,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/covered_by.hpp:24,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/buffer/buffered_piece_collection.hpp:32,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/buffer/buffer_inserter.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/buffer.hpp:41,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/geometry.hpp:66:
/usr/local/lib/R/site-library/BH/include/boost/smart_ptr/scoped_ptr.hpp: At global scope:
/usr/local/lib/R/site-library/BH/include/boost/smart_ptr/scoped_ptr.hpp:74:31: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   74 |     explicit scoped_ptr( std::auto_ptr<T> p ) BOOST_SP_NOEXCEPT : px( p.release() )
      |                               ^~~~~~~~
/usr/include/c++/12/bits/unique_ptr.h:56:28: note: declared here
   56 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/geometries.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/io/svg/svg_mapper.hpp:43,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/geometry.hpp:129:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp: In member function ‘void boost::geometry::model::d3::point_xyz<CoordinateType, CoordinateSystem>::x(const CoordinateType&)’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:68:27: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Key, class _Compare, class _Alloc> class std::set’
   68 |     { this->template set<0>(v); }
      |                           ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:68:27: note:   expected a type, got ‘0’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:68:27: error: template argument 2 is invalid
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:68:27: error: template argument 3 is invalid
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp: In member function ‘void boost::geometry::model::d3::point_xyz<CoordinateType, CoordinateSystem>::y(const CoordinateType&)’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:72:27: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Key, class _Compare, class _Alloc> class std::set’
   72 |     { this->template set<1>(v); }
      |                           ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:72:27: note:   expected a type, got ‘1’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:72:27: error: template argument 2 is invalid
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:72:27: error: template argument 3 is invalid
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp: In member function ‘void boost::geometry::model::d3::point_xyz<CoordinateType, CoordinateSystem>::z(const CoordinateType&)’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:76:27: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Key, class _Compare, class _Alloc> class std::set’
   76 |     { this->template set<2>(v); }
      |                           ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:76:27: note:   expected a type, got ‘2’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:76:27: error: template argument 2 is invalid
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/point_xyz.hpp:76:27: error: template argument 3 is invalid
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/lexical_cast.hpp:30,
                 from /usr/local/lib/R/site-library/BH/include/boost/multiprecision/detail/number_base.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/multiprecision/traits/is_variable_precision.hpp:9,
                 from /usr/local/lib/R/site-library/BH/include/boost/multiprecision/detail/precision.hpp:9,
                 from /usr/local/lib/R/site-library/BH/include/boost/multiprecision/number.hpp:11,
                 from /usr/local/lib/R/site-library/BH/include/boost/multiprecision/cpp_int.hpp:14,
                 from /usr/local/lib/R/site-library/BH/include/boost/multiprecision/cpp_bin_float.hpp:9,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/core/coordinate_promotion.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/core/radian_access.hpp:30,
                 from /usr/local/lib/R/site-library/BH/include/boost/geometry/geometry.hpp:53:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/point_concept.hpp:131:5:   required from ‘class boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/arithmetic/arithmetic.hpp:64:5:   required from ‘class boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >’
geometrical_functions.cpp:62:51:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/arithmetic/arithmetic.hpp:64:5:   required from ‘class boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >’
geometrical_functions.cpp:62:51:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::Point<Geometry>::~Point() [with Geometry = boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/point_concept.hpp:131:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  131 |     BOOST_CONCEPT_USAGE(Point)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/point_concept.hpp:131:5:   required from ‘class boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Point<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/arithmetic/arithmetic.hpp:64:5:   required from ‘class boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >’
geometrical_functions.cpp:62:51:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::Point<Geometry>::~Point() [with Geometry = boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/point_concept.hpp:131:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  131 |     BOOST_CONCEPT_USAGE(Point)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/point_concept.hpp:185:5:   required from ‘class boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:317:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:317:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::ConstPoint<Geometry>::~ConstPoint() [with Geometry = boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/point_concept.hpp:185:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  185 |     BOOST_CONCEPT_USAGE(ConstPoint)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:281:9:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:281:9:   required from ‘struct boost::SinglePassRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:191:13:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:191:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   required from ‘struct boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:115:5:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:322:9:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:322:9:   required from ‘struct boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:115:5:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:115:5:   required from ‘class boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12: note: in a call to non-static member function ‘boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >::~ForwardRangeConcept()’
  318 |     struct ForwardRangeConcept : SinglePassRangeConcept<T>
      |            ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:120:5:   required from ‘class boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::ConstLinestring<Geometry>::~ConstLinestring() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:120:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  120 |     BOOST_CONCEPT_USAGE(ConstLinestring)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:218:14:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:218:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::bidirectional_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   required from ‘struct boost::BidirectionalRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:356:9:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:356:9:   required from ‘struct boost::BidirectionalRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:239:14:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:239:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:373:9:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::random_access_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:373:9:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:373:9:   required from ‘struct boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:84:5:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:374:9:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:374:9:   required from ‘struct boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:84:5:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:84:5:   required from ‘class boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12: note: in a call to non-static member function ‘boost::RandomAccessRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >::~RandomAccessRangeConcept()’
  370 |     struct RandomAccessRangeConcept : BidirectionalRangeConcept<T>
      |            ^~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:88:5:   required from ‘class boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::Linestring<Geometry>::~Linestring() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:88:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
   88 |     BOOST_CONCEPT_USAGE(Linestring)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/point_concept.hpp:185:5:   required from ‘class boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstPoint<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:317:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::ConstPoint<Geometry>::~ConstPoint() [with Geometry = boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/point_concept.hpp:185:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  185 |     BOOST_CONCEPT_USAGE(ConstPoint)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:120:5:   required from ‘class boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstLinestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:318:37:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::ConstLinestring<Geometry>::~ConstLinestring() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:120:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  120 |     BOOST_CONCEPT_USAGE(ConstLinestring)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:62:9:   required from ‘typename boost::range_size<const SinglePassRange>::type boost::size(const SinglePassRange&) [with SinglePassRange = geometry::model::linestring<geometry::model::point<double, 2, geometry::cs::cartesian> >; typename range_size<const SinglePassRange>::type = long unsigned int]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/point_to_geometry.hpp:182:24:   required from ‘static boost::geometry::detail::distance::point_to_range<Point, Range, Closure, Strategies>::return_type boost::geometry::detail::distance::point_to_range<Point, Range, Closure, Strategies>::apply(const Point&, const Range&, const Strategies&) [with Point = boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>; Range = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; boost::geometry::closure_selector Closure = boost::geometry::closed; Strategies = boost::geometry::strategies::distance::cartesian<>; return_type = double]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:176:21:   required from ‘static auto boost::geometry::resolve_strategy::distance<boost::geometry::default_strategy, false>::apply(const Geometry1&, const Geometry2&, boost::geometry::default_strategy) [with Geometry1 = boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>; Geometry2 = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:203:21:   required from ‘static auto boost::geometry::resolve_dynamic::distance<Geometry1, Geometry2, Tag1, Tag2>::apply(const Geometry1&, const Geometry2&, const Strategy&) [with Strategy = boost::geometry::default_strategy; Geometry1 = boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>; Geometry2 = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Tag1 = boost::geometry::point_tag; Tag2 = boost::geometry::linestring_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:327:24:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&, const Strategy&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >; Strategy = default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/distance/interface.hpp:348:30:   required from ‘auto boost::geometry::distance(const Geometry1&, const Geometry2&) [with Geometry1 = model::point<double, 2, cs::cartesian>; Geometry2 = model::linestring<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:174:35:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::bidirectional_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::random_access_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>*, std::vector<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian>, std::allocator<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:88:5:   required from ‘class boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Linestring<boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/append.hpp:275:30:   required from ‘void boost::geometry::append(Geometry&, const RangeOrPoint&, signed_size_type, signed_size_type) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; RangeOrPoint = model::point<double, 2, cs::cartesian>; signed_size_type = long int]’
geometrical_functions.cpp:67:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::Linestring<Geometry>::~Linestring() [with Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/linestring_concept.hpp:88:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
   88 |     BOOST_CONCEPT_USAGE(Linestring)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/box_concept.hpp:78:5:   required from ‘class boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/envelope/interface.hpp:112:29:   required from ‘static void boost::geometry::resolve_dynamic::envelope<Geometry, Tag>::apply(const Geometry&, Box&, const Strategy&) [with Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Strategy = boost::geometry::default_strategy; Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Tag = boost::geometry::linestring_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/envelope/interface.hpp:179:47:   required from ‘void boost::geometry::envelope(const Geometry&, Box&) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; Box = model::box<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:110:17:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/envelope/interface.hpp:112:29:   required from ‘static void boost::geometry::resolve_dynamic::envelope<Geometry, Tag>::apply(const Geometry&, Box&, const Strategy&) [with Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Strategy = boost::geometry::default_strategy; Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Tag = boost::geometry::linestring_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/envelope/interface.hpp:179:47:   required from ‘void boost::geometry::envelope(const Geometry&, Box&) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; Box = model::box<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:110:17:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::Box<Geometry>::~Box() [with Geometry = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/box_concept.hpp:78:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
   78 |     BOOST_CONCEPT_USAGE(Box)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/box_concept.hpp:78:5:   required from ‘class boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/envelope/interface.hpp:112:29:   required from ‘static void boost::geometry::resolve_dynamic::envelope<Geometry, Tag>::apply(const Geometry&, Box&, const Strategy&) [with Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Strategy = boost::geometry::default_strategy; Geometry = boost::geometry::model::linestring<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Tag = boost::geometry::linestring_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/algorithms/detail/envelope/interface.hpp:179:47:   required from ‘void boost::geometry::envelope(const Geometry&, Box&) [with Geometry = model::linestring<model::point<double, 2, cs::cartesian> >; Box = model::box<model::point<double, 2, cs::cartesian> >]’
geometrical_functions.cpp:110:17:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::Box<Geometry>::~Box() [with Geometry = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/box_concept.hpp:78:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
   78 |     BOOST_CONCEPT_USAGE(Box)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/box_concept.hpp:125:5:   required from ‘class boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/algorithms/bounds.hpp:62:74:   required from ‘void boost::geometry::index::detail::bounds(const Geometry&, Bounds&, const Strategy&) [with Geometry = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Bounds = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Strategy = boost::geometry::default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:321:30:   required from ‘boost::geometry::index::detail::rtree::visitors::detail::insert<Element, MembersHolder>::insert(node_pointer&, size_type&, const Element&, const parameters_type&, const translator_type&, allocators_type&, size_type) [with Element = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder; node_pointer = boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*; size_type = long unsigned int; parameters_type = boost::geometry::index::quadratic<16>; translator_type = boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> > >; allocators_type = boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:604:92:   required from ‘boost::geometry::index::detail::rtree::visitors::insert<typename MembersHolder::value_type, MembersHolder, boost::geometry::index::detail::rtree::insert_default_tag>::insert(node_pointer&, size_type&, const value_type&, const parameters_type&, const translator_type&, allocators_type&, size_type) [with MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder; typename MembersHolder::value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; node_pointer = boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*; size_type = long unsigned int; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; parameters_type = boost::geometry::index::quadratic<16>; translator_type = boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> > >; allocators_type = boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1658:13:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:55:5:   required from ‘constexpr void boost::geometry::concepts::check() [with Geometry = const boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/check.hpp:71:21:   required from ‘constexpr void boost::geometry::concepts::check_concepts_and_equal_dimensions() [with Geometry1 = const boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Geometry2 = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/algorithms/bounds.hpp:62:74:   required from ‘void boost::geometry::index::detail::bounds(const Geometry&, Bounds&, const Strategy&) [with Geometry = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Bounds = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Strategy = boost::geometry::default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:321:30:   required from ‘boost::geometry::index::detail::rtree::visitors::detail::insert<Element, MembersHolder>::insert(node_pointer&, size_type&, const Element&, const parameters_type&, const translator_type&, allocators_type&, size_type) [with Element = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder; node_pointer = boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*; size_type = long unsigned int; parameters_type = boost::geometry::index::quadratic<16>; translator_type = boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> > >; allocators_type = boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:604:92:   required from ‘boost::geometry::index::detail::rtree::visitors::insert<typename MembersHolder::value_type, MembersHolder, boost::geometry::index::detail::rtree::insert_default_tag>::insert(node_pointer&, size_type&, const value_type&, const parameters_type&, const translator_type&, allocators_type&, size_type) [with MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder; typename MembersHolder::value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; node_pointer = boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*; size_type = long unsigned int; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; parameters_type = boost::geometry::index::quadratic<16>; translator_type = boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> > >; allocators_type = boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1658:13:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::ConstBox<Geometry>::~ConstBox() [with Geometry = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/box_concept.hpp:125:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  125 |     BOOST_CONCEPT_USAGE(ConstBox)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/box_concept.hpp:125:5:   required from ‘class boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::geometry::concepts::ConstBox<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/algorithms/bounds.hpp:62:74:   required from ‘void boost::geometry::index::detail::bounds(const Geometry&, Bounds&, const Strategy&) [with Geometry = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Bounds = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Strategy = boost::geometry::default_strategy]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:321:30:   required from ‘boost::geometry::index::detail::rtree::visitors::detail::insert<Element, MembersHolder>::insert(node_pointer&, size_type&, const Element&, const parameters_type&, const translator_type&, allocators_type&, size_type) [with Element = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder; node_pointer = boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*; size_type = long unsigned int; parameters_type = boost::geometry::index::quadratic<16>; translator_type = boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> > >; allocators_type = boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:604:92:   required from ‘boost::geometry::index::detail::rtree::visitors::insert<typename MembersHolder::value_type, MembersHolder, boost::geometry::index::detail::rtree::insert_default_tag>::insert(node_pointer&, size_type&, const value_type&, const parameters_type&, const translator_type&, allocators_type&, size_type) [with MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder; typename MembersHolder::value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; node_pointer = boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*; size_type = long unsigned int; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; parameters_type = boost::geometry::index::quadratic<16>; translator_type = boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> > >; allocators_type = boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1658:13:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::geometry::concepts::ConstBox<Geometry>::~ConstBox() [with Geometry = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/geometry/geometries/concepts/box_concept.hpp:125:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  125 |     BOOST_CONCEPT_USAGE(ConstBox)
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Assignable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:145:5:   required from ‘struct boost::Assignable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:108:3:   required from ‘struct boost_concepts::IncrementableIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Assignable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:108:3:   required from ‘struct boost_concepts::IncrementableIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost_concepts::IncrementableIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:120:7:   required from ‘struct boost_concepts::IncrementableIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost_concepts::IncrementableIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/varray.hpp:286:9:   required from ‘boost::geometry::index::detail::varray<Value, Capacity>::varray(Iterator, Iterator) [with Iterator = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; long unsigned int Capacity = 17]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/quadratic/redistribute_elements.hpp:131:24:   required from ‘static void boost::geometry::index::detail::rtree::redistribute_elements<MembersHolder, boost::geometry::index::detail::rtree::quadratic_tag>::apply(Node&, Node&, box_type&, box_type&, const parameters_type&, const translator_type&, allocators_type&) [with Node = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder; box_type = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; parameters_type = boost::geometry::index::quadratic<16>; translator_type = boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> > >; allocators_type = boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:188:24:   required from ‘static void boost::geometry::index::detail::rtree::split<MembersHolder, boost::geometry::index::detail::rtree::split_default_tag>::apply(nodes_container_type&, Node&, box_type&, const parameters_type&, const translator_type&, allocators_type&) [with Node = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder; nodes_container_type = boost::geometry::index::detail::varray<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>, 1>; box_type = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; parameters_type = boost::geometry::index::quadratic<16>; translator_type = boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> > >; allocators_type = boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:405:26:   required from ‘void boost::geometry::index::detail::rtree::visitors::detail::insert<Element, MembersHolder>::split(Node&) const [with Node = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; Element = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:374:18:   required from ‘void boost::geometry::index::detail::rtree::visitors::detail::insert<Element, MembersHolder>::post_traverse(Node&) [with Node = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; Element = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:626:28:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:20:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:17: note: in a call to non-static member function ‘boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>::~ForwardTraversal()’
  141 |   BOOST_concept(ForwardTraversal,(Iterator))
      |                 ^~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/concept_def.hpp:29:12: note: in definition of macro ‘BOOST_concept’
   29 |     struct name
      |            ^~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Assignable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:145:5:   required from ‘struct boost::Assignable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:108:3:   required from ‘struct boost_concepts::IncrementableIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Assignable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:108:3:   required from ‘struct boost_concepts::IncrementableIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost_concepts::IncrementableIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:120:7:   required from ‘struct boost_concepts::IncrementableIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost_concepts::IncrementableIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/varray.hpp:286:9:   required from ‘boost::geometry::index::detail::varray<Value, Capacity>::varray(Iterator, Iterator) [with Iterator = boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*; Value = boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>; long unsigned int Capacity = 17]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/quadratic/redistribute_elements.hpp:131:24:   required from ‘static void boost::geometry::index::detail::rtree::redistribute_elements<MembersHolder, boost::geometry::index::detail::rtree::quadratic_tag>::apply(Node&, Node&, box_type&, box_type&, const parameters_type&, const translator_type&, allocators_type&) [with Node = boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder; box_type = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; parameters_type = boost::geometry::index::quadratic<16>; translator_type = boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> > >; allocators_type = boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:188:24:   required from ‘static void boost::geometry::index::detail::rtree::split<MembersHolder, boost::geometry::index::detail::rtree::split_default_tag>::apply(nodes_container_type&, Node&, box_type&, const parameters_type&, const translator_type&, allocators_type&) [with Node = boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder; nodes_container_type = boost::geometry::index::detail::varray<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>, 1>; box_type = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; parameters_type = boost::geometry::index::quadratic<16>; translator_type = boost::geometry::index::detail::translator<boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> > >; allocators_type = boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:405:26:   required from ‘void boost::geometry::index::detail::rtree::visitors::detail::insert<Element, MembersHolder>::split(Node&) const [with Node = boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; Element = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:374:18:   required from ‘void boost::geometry::index::detail::rtree::visitors::detail::insert<Element, MembersHolder>::post_traverse(Node&) [with Node = boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; Element = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; MembersHolder = boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/visitors/insert.hpp:615:28:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:17: note: in a call to non-static member function ‘boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>::~ForwardTraversal()’
  141 |   BOOST_concept(ForwardTraversal,(Iterator))
      |                 ^~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/concept_def.hpp:29:12: note: in definition of macro ‘BOOST_concept’
   29 |     struct name
      |            ^~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Assignable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Assignable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:145:5:   required from ‘struct boost::Assignable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:108:3:   required from ‘struct boost_concepts::IncrementableIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Assignable<TT>::~Assignable() [with TT = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:145:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  145 |     BOOST_CONCEPT_USAGE(Assignable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:108:3:   required from ‘struct boost_concepts::IncrementableIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost_concepts::IncrementableIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost_concepts::IncrementableIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:120:7:   required from ‘struct boost_concepts::IncrementableIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost_concepts::IncrementableIterator<Iterator>::~IncrementableIterator() [with Iterator = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:120:7: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  120 |       BOOST_CONCEPT_USAGE(IncrementableIterator)
      |       ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost_concepts::ForwardTraversal<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>*]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Assignable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Assignable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:145:5:   required from ‘struct boost::Assignable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:108:3:   required from ‘struct boost_concepts::IncrementableIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Assignable<TT>::~Assignable() [with TT = boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:145:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  145 |     BOOST_CONCEPT_USAGE(Assignable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:108:3:   required from ‘struct boost_concepts::IncrementableIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost_concepts::IncrementableIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost_concepts::IncrementableIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:120:7:   required from ‘struct boost_concepts::IncrementableIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost_concepts::IncrementableIterator<Iterator>::~IncrementableIterator() [with Iterator = boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:120:7: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  120 |       BOOST_CONCEPT_USAGE(IncrementableIterator)
      |       ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:129:3:   required from ‘struct boost_concepts::SinglePassIterator<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:141:3:   required from ‘struct boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost_concepts::ForwardTraversal<boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/variant/variant.hpp:2393:44:   required from ‘typename Visitor::result_type boost::variant<T0, TN>::apply_visitor(Visitor&) & [with Visitor = boost::geometry::index::detail::rtree::visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, boost::geometry::index::detail::rtree::insert_default_tag>; T0_ = boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>; TN = {boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>}; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = geometry::index::detail::rtree::visitors::insert<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::rtree<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16> >::members_holder, geometry::index::detail::rtree::insert_default_tag>; Visitable = variant<geometry::index::detail::rtree::variant_leaf<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::variant_internal_node<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::allocators<container::new_allocator<std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int> >, std::pair<geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, int>, geometry::index::quadratic<16, 4>, geometry::model::box<geometry::model::point<double, 2, geometry::cs::cartesian> >, geometry::index::detail::rtree::node_variant_static_tag>, geometry::index::detail::rtree::node_variant_static_tag> >&; typename Visitor::result_type = void]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/detail/rtree/node/variant_visitor.hpp:51:25:   required from ‘void boost::geometry::index::detail::rtree::apply_visitor(Visitor&, boost::variant<variant_leaf<Value, Parameters, Box, Allocators, Tag>, variant_internal_node<Value, Parameters, Box, Allocators, Tag> >&) [with Visitor = visitors::insert<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::rtree<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16> >::members_holder, insert_default_tag>; Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; Box = boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >; Allocators = allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, node_variant_static_tag>; Tag = node_variant_static_tag]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:1661:37:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::raw_insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
/usr/local/lib/R/site-library/BH/include/boost/geometry/index/rtree.hpp:832:15:   required from ‘void boost::geometry::index::rtree<Value, Options, IndexableGetter, EqualTo, Allocator>::insert(const value_type&) [with Value = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>; Parameters = boost::geometry::index::quadratic<16>; IndexableGetter = boost::geometry::index::indexable<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; EqualTo = boost::geometry::index::equal_to<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; Allocator = boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >; value_type = std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>]’
geometrical_functions.cpp:112:18:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = boost::geometry::index::detail::rtree::ptr_pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::variant<boost::geometry::index::detail::rtree::variant_leaf<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::variant_internal_node<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::allocators<boost::container::new_allocator<std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int> >, std::pair<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, int>, boost::geometry::index::quadratic<16, 4>, boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> >, boost::geometry::index::detail::rtree::node_variant_static_tag>, boost::geometry::index::detail::rtree::node_variant_static_tag> >*>*]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
make: *** [/usr/lib/R/etc/Makeconf:177: geometrical_functions.o] Error 1
ERROR: compilation failed for package ‘spNetwork’
* removing ‘/tmp/Rtmpo8Q240/file85da1d8f1/spNetwork.Rcheck/spNetwork’
